// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




// define models for database



// model User {
//   id            Int   @id @default(autoincrement())
//   username      String @unique
//   password      String 
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
//   email         String   @unique
//   plan          String @default("free")
// }


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String? @unique
  password      String? 
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}






////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
///Animation and product


model Product {
  id Int @id @default(autoincrement())
  title String?
  description String?
  tags String?
  published Boolean @default(false)
  cover String?
  views Int @default(autoincrement())
  favourited Int @default(autoincrement())
  price Int?
  animations Animation?
  width Int?
  height Int?
  duration Int?
  previewVideo String?
  randomfield String?


}


model Animation {
  jsonData String
  productId Int @unique
  sound String?
  edits Int @default(autoincrement())
  previewed Int @default(autoincrement())

  product Product @relation(fields: [productId], references: [id])

}


model Project {
  id Int @id @default(autoincrement())
  title String?
  description String?
  cover String?
  jsonData String?
  template Int?
  sound String?
  scenes String[]
  firebaseJSONURL String?
  owner String?
  collaborators String[]
  previewProject String?
  renderedVideoDownloadLink String?
}







